{"ast":null,"code":"var _jsxFileName = \"D:\\\\proyects\\\\react\\\\E-commerce_template01\\\\template01\\\\src\\\\utils\\\\ConectorSV.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer, useState } from 'react';\nimport axios from 'axios';\nimport logger from 'use-reducer-logger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return {\n        ...state,\n        loading: true\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        products: action.payload,\n        loading: false\n      };\n    case 'FETCH_FAIL':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst Products_sv = () => {\n  _s();\n  const [{\n    loading,\n    error,\n    products\n  }, dispatch] = useReducer(logger(reducer), {\n    products: [],\n    loading: true,\n    error: ''\n  });\n\n  // const [products, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_REQUEST'\n      });\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: result.data\n        });\n      } catch (error) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: error.message\n        });\n        console.log(error.stack);\n      }\n      // setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n  let toReturn;\n  if (!loading && !error) {\n    toReturn = products;\n  } else if (!loading && error) {\n    toReturn = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }, this);\n  } else {\n    toReturn = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }, this);\n  }\n  return toReturn;\n};\n_s(Products_sv, \"vbZTz/XYnUMtckTOJJgr/suJ3Z8=\");\n_c = Products_sv;\nexport default Products_sv;\nvar _c;\n$RefreshReg$(_c, \"Products_sv\");","map":{"version":3,"names":["useEffect","useReducer","useState","axios","logger","jsxDEV","_jsxDEV","reducer","state","action","type","loading","products","payload","error","Products_sv","_s","dispatch","fetchData","result","get","data","message","console","log","stack","toReturn","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/proyects/react/E-commerce_template01/template01/src/utils/ConectorSV.jsx"],"sourcesContent":["import { useEffect, useReducer, useState } from 'react'\r\nimport axios from 'axios';\r\nimport logger from 'use-reducer-logger';\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_REQUEST':\r\n\r\n            return { ...state, loading: true };\r\n        case 'FETCH_SUCCESS':\r\n\r\n            return { ...state, products: action.payload, loading: false };\r\n        case 'FETCH_FAIL':\r\n\r\n            return { ...state, loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Products_sv = () => {\r\n    const [{ loading, error, products }, dispatch] = useReducer(logger(reducer), {\r\n        products: [],\r\n        loading: true,\r\n        error: ''\r\n    });\r\n\r\n    // const [products, setData] = useState([]);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            dispatch({ type: 'FETCH_REQUEST' });\r\n            try {\r\n                const result = await axios.get('/api/products');\r\n                dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\r\n            } catch (error) {\r\n                dispatch({ type: 'FETCH_FAIL', payload: error.message });\r\n                console.log(error.stack);\r\n            }\r\n            // setData(result.data);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    let toReturn;\r\n    if (!loading && !error) {\r\n        toReturn = products\r\n    } else if (!loading && error) {\r\n        toReturn = <div>{error}</div>\r\n    } else {\r\n        toReturn = <div>Loading...</div>\r\n    }\r\n    return toReturn;\r\n};\r\n\r\n\r\n\r\n\r\nexport default Products_sv;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,eAAe;MAEhB,OAAO;QAAE,GAAGF,KAAK;QAAEG,OAAO,EAAE;MAAK,CAAC;IACtC,KAAK,eAAe;MAEhB,OAAO;QAAE,GAAGH,KAAK;QAAEI,QAAQ,EAAEH,MAAM,CAACI,OAAO;QAAEF,OAAO,EAAE;MAAM,CAAC;IACjE,KAAK,YAAY;MAEb,OAAO;QAAE,GAAGH,KAAK;QAAEG,OAAO,EAAE,KAAK;QAAEG,KAAK,EAAEL,MAAM,CAACI;MAAQ,CAAC;IAE9D;MACI,OAAOL,KAAK;EAAC;AAEzB,CAAC;AAED,MAAMO,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAAC;IAAEL,OAAO;IAAEG,KAAK;IAAEF;EAAS,CAAC,EAAEK,QAAQ,CAAC,GAAGhB,UAAU,CAACG,MAAM,CAACG,OAAO,CAAC,EAAE;IACzEK,QAAQ,EAAE,EAAE;IACZD,OAAO,EAAE,IAAI;IACbG,KAAK,EAAE;EACX,CAAC,CAAC;;EAEF;EACAd,SAAS,CAAC,MAAM;IACZ,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BD,QAAQ,CAAC;QAAEP,IAAI,EAAE;MAAgB,CAAC,CAAC;MACnC,IAAI;QACA,MAAMS,MAAM,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,eAAe,CAAC;QAC/CH,QAAQ,CAAC;UAAEP,IAAI,EAAE,eAAe;UAAEG,OAAO,EAAEM,MAAM,CAACE;QAAK,CAAC,CAAC;MAC7D,CAAC,CAAC,OAAOP,KAAK,EAAE;QACZG,QAAQ,CAAC;UAAEP,IAAI,EAAE,YAAY;UAAEG,OAAO,EAAEC,KAAK,CAACQ;QAAQ,CAAC,CAAC;QACxDC,OAAO,CAACC,GAAG,CAACV,KAAK,CAACW,KAAK,CAAC;MAC5B;MACA;IACJ,CAAC;;IACDP,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EACN,IAAIQ,QAAQ;EACZ,IAAI,CAACf,OAAO,IAAI,CAACG,KAAK,EAAE;IACpBY,QAAQ,GAAGd,QAAQ;EACvB,CAAC,MAAM,IAAI,CAACD,OAAO,IAAIG,KAAK,EAAE;IAC1BY,QAAQ,gBAAGpB,OAAA;MAAAqB,QAAA,EAAMb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EACjC,CAAC,MAAM;IACHL,QAAQ,gBAAGpB,OAAA;MAAAqB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EACpC;EACA,OAAOL,QAAQ;AACnB,CAAC;AAACV,EAAA,CA/BID,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}