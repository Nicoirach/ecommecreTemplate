{"ast":null,"code":"const addItem = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst controlItems = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : addItem;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const product_in = action.payload;\n  let product_before;\n  if (product_in) {\n    product_before = state.find(x => x.id === product_in.id);\n  }\n  let valueReturn = state;\n  switch (action.type) {\n    case 'ADDITEM':\n      console.log(product_before);\n      console.log(product_before);\n      console.log(product_before.qty < product_in.stock);\n      if (product_before == null || product_before.qty == null || product_before.qty < product_in.stock) {\n        //Check if Product is Already Exist\n        const exist = state.find(x => x.id === product_in.id);\n        if (exist) {\n          //Increase Quantity\n          valueReturn = state.map(x => x.id === product_in.id ? {\n            ...x,\n            qty: x.qty + 1\n          } : x);\n        } else {\n          valueReturn = [...state, {\n            ...product_in,\n            qty: 1\n          }];\n        }\n      } else {\n        window.alert('Lo siento. Stock insuficiente...');\n      }\n      localStorage.setItem('cartItems', JSON.stringify(valueReturn));\n      return valueReturn;\n\n    // return [...state, action.payload]\n    case 'RESTITEM':\n      const exist_del = state.find(x => x.id === product_in.id);\n      if (exist_del.qty === 1) {\n        valueReturn = state.filter(x => x.id !== exist_del.id);\n      } else {\n        valueReturn = state.map(x => x.id === product_in.id ? {\n          ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n      localStorage.setItem('cartItems', JSON.stringify(valueReturn));\n      return valueReturn;\n    case 'DELITEM':\n      valueReturn = state = state.filter(x => {\n        return x.id !== action.payload.id;\n      });\n      localStorage.setItem('cartItems', JSON.stringify(valueReturn));\n      return valueReturn;\n    case 'USER_SIGNIN':\n      return {\n        ...state,\n        userInfo: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default controlItems;\n\n// const initialState = localStorage.getItem('cartItems')\n//     ? JSON.parse(localStorage.getItem('cartItems'))\n//     : { userInfo: null, cart: [] };\n\n// const controlItems = (state = initialState, action) => {\n//     const product_in = action.payload;\n//     let product_before;\n//     if (product_in) {\n//         product_before = state.cart.find(x => x.id === product_in.id);\n//     }\n//     let actualCart = state.cart;\n//     switch (action.type) {\n//         case 'ADDITEM':\n\n//             if (product_before == null || product_before.qty == null || product_before.qty < product_in.stock) {\n//                 //Check if Product is Already Exist\n//                 const exist = state.cart.find((x) => x.id === product_in.id);\n//                 if (exist) {\n//                     //Increase Quantity\n//                     actualCart = state.cart.map((x) => x.id === product_in.id ? { ...x, qty: x.qty + 1 } : x);\n//                 } else {\n//                     actualCart = [\n//                         ...state.cart,\n//                         {\n//                             ...product_in,\n//                             qty: 1,\n//                         }\n//                     ]\n//                 }\n//             } else {\n//                 window.alert('Lo siento. Stock insuficiente...');\n//             }\n//             localStorage.setItem('cartItems', JSON.stringify(valueReturn));\n//             return valueReturn;\n\n//         // return [...state, action.payload]\n//         case 'RESTITEM':\n//             const exist_del = state.cart.find((x) => x.id === product_in.id);\n//             if (exist_del.qty === 1) {\n//                 actualCart = state.cart.filter((x) => x.id !== exist_del.id);\n//             } else {\n//                 actualCart = state.cart.map((x) => x.id === product_in.id ? { ...x, qty: x.qty - 1 } : x);\n//             }\n//             valueReturn = {}\n//             localStorage.setItem('cartItems', JSON.stringify(valueReturn));\n//             return valueReturn;\n\n//         case 'DELITEM':\n//             actualCart = state.cart = state.cart.filter((x) => {\n//                 return x.id !== action.payload.id\n//             })\n//             localStorage.setItem('cartItems', JSON.stringify(valueReturn));\n//             return valueReturn;\n\n//         case 'USER_SIGNIN':\n//             return { ...state, userInfo: action.payload };\n\n//         default: return state;\n//     }\n// }\n\n// export default controlItems;","map":{"version":3,"names":["addItem","localStorage","getItem","JSON","parse","controlItems","state","arguments","length","undefined","action","product_in","payload","product_before","find","x","id","valueReturn","type","console","log","qty","stock","exist","map","window","alert","setItem","stringify","exist_del","filter","userInfo"],"sources":["D:/proyects/react/E-commerce_template01/template01/src/redux/reducers/cartControl.js"],"sourcesContent":["const addItem = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems'))\r\n    : [];\r\n\r\nconst controlItems = (state = addItem, action) => {\r\n    const product_in = action.payload;\r\n    let product_before;\r\n    if (product_in) {\r\n        product_before = state.find(x => x.id === product_in.id);\r\n    }\r\n    let valueReturn = state;\r\n    switch (action.type) {\r\n        case 'ADDITEM':\r\n            console.log(product_before);\r\n            console.log(product_before);\r\n            console.log(product_before.qty < product_in.stock);\r\n            if (product_before == null || product_before.qty == null || product_before.qty < product_in.stock) {\r\n                //Check if Product is Already Exist\r\n                const exist = state.find((x) => x.id === product_in.id);\r\n                if (exist) {\r\n                    //Increase Quantity\r\n                    valueReturn = state.map((x) => x.id === product_in.id ? { ...x, qty: x.qty + 1 } : x);\r\n                } else {\r\n                    valueReturn = [\r\n                        ...state,\r\n                        {\r\n                            ...product_in,\r\n                            qty: 1,\r\n                        }\r\n                    ]\r\n                }\r\n            } else {\r\n                window.alert('Lo siento. Stock insuficiente...');\r\n            }\r\n            localStorage.setItem('cartItems', JSON.stringify(valueReturn));\r\n            return valueReturn;\r\n\r\n        // return [...state, action.payload]\r\n        case 'RESTITEM':\r\n            const exist_del = state.find((x) => x.id === product_in.id);\r\n            if (exist_del.qty === 1) {\r\n                valueReturn = state.filter((x) => x.id !== exist_del.id);\r\n            } else {\r\n                valueReturn = state.map((x) => x.id === product_in.id ? { ...x, qty: x.qty - 1 } : x);\r\n            }\r\n            localStorage.setItem('cartItems', JSON.stringify(valueReturn));\r\n            return valueReturn;\r\n\r\n        case 'DELITEM':\r\n            valueReturn = state = state.filter((x) => {\r\n                return x.id !== action.payload.id\r\n            })\r\n            localStorage.setItem('cartItems', JSON.stringify(valueReturn));\r\n            return valueReturn;\r\n\r\n        case 'USER_SIGNIN':\r\n            return { ...state, userInfo: action.payload };\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default controlItems;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const initialState = localStorage.getItem('cartItems')\r\n//     ? JSON.parse(localStorage.getItem('cartItems'))\r\n//     : { userInfo: null, cart: [] };\r\n\r\n// const controlItems = (state = initialState, action) => {\r\n//     const product_in = action.payload;\r\n//     let product_before;\r\n//     if (product_in) {\r\n//         product_before = state.cart.find(x => x.id === product_in.id);\r\n//     }\r\n//     let actualCart = state.cart;\r\n//     switch (action.type) {\r\n//         case 'ADDITEM':\r\n            \r\n//             if (product_before == null || product_before.qty == null || product_before.qty < product_in.stock) {\r\n//                 //Check if Product is Already Exist\r\n//                 const exist = state.cart.find((x) => x.id === product_in.id);\r\n//                 if (exist) {\r\n//                     //Increase Quantity\r\n//                     actualCart = state.cart.map((x) => x.id === product_in.id ? { ...x, qty: x.qty + 1 } : x);\r\n//                 } else {\r\n//                     actualCart = [\r\n//                         ...state.cart,\r\n//                         {\r\n//                             ...product_in,\r\n//                             qty: 1,\r\n//                         }\r\n//                     ]\r\n//                 }\r\n//             } else {\r\n//                 window.alert('Lo siento. Stock insuficiente...');\r\n//             }\r\n//             localStorage.setItem('cartItems', JSON.stringify(valueReturn));\r\n//             return valueReturn;\r\n\r\n//         // return [...state, action.payload]\r\n//         case 'RESTITEM':\r\n//             const exist_del = state.cart.find((x) => x.id === product_in.id);\r\n//             if (exist_del.qty === 1) {\r\n//                 actualCart = state.cart.filter((x) => x.id !== exist_del.id);\r\n//             } else {\r\n//                 actualCart = state.cart.map((x) => x.id === product_in.id ? { ...x, qty: x.qty - 1 } : x);\r\n//             }\r\n//             valueReturn = {}\r\n//             localStorage.setItem('cartItems', JSON.stringify(valueReturn));\r\n//             return valueReturn;\r\n\r\n//         case 'DELITEM':\r\n//             actualCart = state.cart = state.cart.filter((x) => {\r\n//                 return x.id !== action.payload.id\r\n//             })\r\n//             localStorage.setItem('cartItems', JSON.stringify(valueReturn));\r\n//             return valueReturn;\r\n\r\n//         case 'USER_SIGNIN':\r\n//             return { ...state, userInfo: action.payload };\r\n\r\n//         default: return state;\r\n//     }\r\n// }\r\n\r\n// export default controlItems;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}