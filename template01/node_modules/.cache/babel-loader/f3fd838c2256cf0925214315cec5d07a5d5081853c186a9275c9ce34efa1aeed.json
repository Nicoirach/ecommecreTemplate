{"ast":null,"code":"const addItem = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst controlItems = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : addItem;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const product = action.payload;\n  let valueReturn = state;\n  switch (action.type) {\n    case 'ADDITEM':\n      if (product.qty == null || product.qty < product.stock) {\n        //Check if Product is Already Exist\n        const exist = state.find(x => x.id === product.id);\n        if (exist) {\n          //Increase Quantity\n          valueReturn = state.map(x => x.id === product.id ? {\n            ...x,\n            qty: x.qty + 1\n          } : x);\n        } else {\n          valueReturn = [...state, {\n            ...product,\n            qty: 1\n          }];\n        }\n      }\n      localStorage.setItem('cartItems', JSON.stringify(valueReturn));\n      return valueReturn;\n\n    // return [...state, action.payload]\n    case 'RESTITEM':\n      const exist_del = state.find(x => x.id === product.id);\n      if (exist_del.qty === 1) {\n        valueReturn = state.filter(x => x.id !== exist_del.id);\n      } else {\n        valueReturn = state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n      localStorage.setItem('cartItems', JSON.stringify(valueReturn));\n      return valueReturn;\n    case 'DELITEM':\n      valueReturn = state = state.filter(x => {\n        return x.id !== action.payload.id;\n      });\n      localStorage.setItem('cartItems', JSON.stringify(valueReturn));\n      return valueReturn;\n    default:\n      return state;\n  }\n};\nexport default controlItems;","map":{"version":3,"names":["addItem","localStorage","getItem","JSON","parse","controlItems","state","arguments","length","undefined","action","product","payload","valueReturn","type","qty","stock","exist","find","x","id","map","setItem","stringify","exist_del","filter"],"sources":["D:/proyects/react/E-commerce_template01/template01/src/redux/reducers/cartControl.js"],"sourcesContent":["const addItem = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems'))\r\n    : [];\r\n\r\nconst controlItems = (state = addItem, action) => {\r\n    const product = action.payload;\r\n    let valueReturn = state;\r\n    switch (action.type) {\r\n        case 'ADDITEM':\r\n            if (product.qty == null || product.qty < product.stock) {\r\n                //Check if Product is Already Exist\r\n                const exist = state.find((x) => x.id === product.id);\r\n                if (exist) {\r\n                    //Increase Quantity\r\n                    valueReturn = state.map((x) => x.id === product.id ? { ...x, qty: x.qty + 1 } : x);\r\n                } else {\r\n                    valueReturn = [\r\n                        ...state,\r\n                        {\r\n                            ...product,\r\n                            qty: 1,\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n            localStorage.setItem('cartItems', JSON.stringify(valueReturn));\r\n            return valueReturn;\r\n\r\n        // return [...state, action.payload]\r\n        case 'RESTITEM':\r\n            const exist_del = state.find((x) => x.id === product.id);\r\n            if (exist_del.qty === 1) {\r\n                valueReturn = state.filter((x) => x.id !== exist_del.id);\r\n            } else {\r\n                valueReturn = state.map((x) => x.id === product.id ? { ...x, qty: x.qty - 1 } : x);\r\n            }\r\n            localStorage.setItem('cartItems', JSON.stringify(valueReturn));\r\n            return valueReturn;\r\n\r\n        case 'DELITEM':\r\n            valueReturn = state = state.filter((x) => {\r\n                return x.id !== action.payload.id\r\n            })\r\n            localStorage.setItem('cartItems', JSON.stringify(valueReturn));\r\n            return valueReturn;\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default controlItems;"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC3CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AAER,MAAMG,YAAY,GAAG,SAAAA,CAAA,EAA6B;EAAA,IAA5BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,OAAO;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzC,MAAME,OAAO,GAAGD,MAAM,CAACE,OAAO;EAC9B,IAAIC,WAAW,GAAGP,KAAK;EACvB,QAAQI,MAAM,CAACI,IAAI;IACf,KAAK,SAAS;MACV,IAAIH,OAAO,CAACI,GAAG,IAAI,IAAI,IAAIJ,OAAO,CAACI,GAAG,GAAGJ,OAAO,CAACK,KAAK,EAAE;QACpD;QACA,MAAMC,KAAK,GAAGX,KAAK,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKT,OAAO,CAACS,EAAE,CAAC;QACpD,IAAIH,KAAK,EAAE;UACP;UACAJ,WAAW,GAAGP,KAAK,CAACe,GAAG,CAAEF,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKT,OAAO,CAACS,EAAE,GAAG;YAAE,GAAGD,CAAC;YAAEJ,GAAG,EAAEI,CAAC,CAACJ,GAAG,GAAG;UAAE,CAAC,GAAGI,CAAC,CAAC;QACtF,CAAC,MAAM;UACHN,WAAW,GAAG,CACV,GAAGP,KAAK,EACR;YACI,GAAGK,OAAO;YACVI,GAAG,EAAE;UACT,CAAC,CACJ;QACL;MACJ;MACAd,YAAY,CAACqB,OAAO,CAAC,WAAW,EAAEnB,IAAI,CAACoB,SAAS,CAACV,WAAW,CAAC,CAAC;MAC9D,OAAOA,WAAW;;IAEtB;IACA,KAAK,UAAU;MACX,MAAMW,SAAS,GAAGlB,KAAK,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKT,OAAO,CAACS,EAAE,CAAC;MACxD,IAAII,SAAS,CAACT,GAAG,KAAK,CAAC,EAAE;QACrBF,WAAW,GAAGP,KAAK,CAACmB,MAAM,CAAEN,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKI,SAAS,CAACJ,EAAE,CAAC;MAC5D,CAAC,MAAM;QACHP,WAAW,GAAGP,KAAK,CAACe,GAAG,CAAEF,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKT,OAAO,CAACS,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAEJ,GAAG,EAAEI,CAAC,CAACJ,GAAG,GAAG;QAAE,CAAC,GAAGI,CAAC,CAAC;MACtF;MACAlB,YAAY,CAACqB,OAAO,CAAC,WAAW,EAAEnB,IAAI,CAACoB,SAAS,CAACV,WAAW,CAAC,CAAC;MAC9D,OAAOA,WAAW;IAEtB,KAAK,SAAS;MACVA,WAAW,GAAGP,KAAK,GAAGA,KAAK,CAACmB,MAAM,CAAEN,CAAC,IAAK;QACtC,OAAOA,CAAC,CAACC,EAAE,KAAKV,MAAM,CAACE,OAAO,CAACQ,EAAE;MACrC,CAAC,CAAC;MACFnB,YAAY,CAACqB,OAAO,CAAC,WAAW,EAAEnB,IAAI,CAACoB,SAAS,CAACV,WAAW,CAAC,CAAC;MAC9D,OAAOA,WAAW;IAEtB;MAAS,OAAOP,KAAK;EAAC;AAE9B,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}