{"ast":null,"code":"const addItem = [];\nconst controlItems = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : addItem;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'ADDITEM':\n      //Check if Product is Already Exist\n      return [...state, action.payload];\n      break;\n    case 'RESTITEM':\n      return state = state.filter(x => {\n        return x.id !== action.payload.id;\n      });\n      break;\n    default:\n      return state;\n      break;\n  }\n};\nexport default addItem;","map":{"version":3,"names":["addItem","controlItems","state","arguments","length","undefined","action","type","payload","filter","x","id"],"sources":["Z:/proyects/react/E-commerce/template01/src/redux/reducers/cartControl.js"],"sourcesContent":["const addItem = [];\r\n\r\nconst controlItems = (state = addItem, action) => {\r\n    switch (action.type) {\r\n        case 'ADDITEM':\r\n            //Check if Product is Already Exist\r\n            return [...state, action.payload];\r\n            break;\r\n        case 'RESTITEM':\r\n            return state = state.filter((x) => {\r\n                return x.id !== action.payload.id\r\n            });\r\n            break;\r\n        default: return state;\r\n        break;\r\n    }\r\n}\r\n\r\nexport default addItem;"],"mappings":"AAAA,MAAMA,OAAO,GAAG,EAAE;AAElB,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAA6B;EAAA,IAA5BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,OAAO;EAAA,IAAEM,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzC,QAAQC,MAAM,CAACC,IAAI;IACf,KAAK,SAAS;MACV;MACA,OAAO,CAAC,GAAGL,KAAK,EAAEI,MAAM,CAACE,OAAO,CAAC;MACjC;IACJ,KAAK,UAAU;MACX,OAAON,KAAK,GAAGA,KAAK,CAACO,MAAM,CAAEC,CAAC,IAAK;QAC/B,OAAOA,CAAC,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE;MACrC,CAAC,CAAC;MACF;IACJ;MAAS,OAAOT,KAAK;MACrB;EAAM;AAEd,CAAC;AAED,eAAeF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}