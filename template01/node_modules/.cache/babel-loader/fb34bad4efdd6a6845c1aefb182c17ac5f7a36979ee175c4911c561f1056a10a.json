{"ast":null,"code":"/**\r\n * Retorna numero formateado como String\r\n * @param {Number} number\r\n * @returns String de numero con formato de dinero\r\n */\nconst moneyString = number => {\n  const split = number.split('.');\n  const decimal = split[1];\n  number = split[0] ? split[0] : number;\n  return '$' + String(number).replace(/(.)(?=(\\d{3})+$)/g, '$1.') + decimal;\n};\nexport default moneyString;","map":{"version":3,"names":["moneyString","number","split","decimal","String","replace"],"sources":["D:/proyects/react/E-commerce_template01/template01/src/utils/Formats.js"],"sourcesContent":["\r\n/**\r\n * Retorna numero formateado como String\r\n * @param {Number} number\r\n * @returns String de numero con formato de dinero\r\n */\r\nconst moneyString = (number) => {\r\n    const split = number.split('.');\r\n    const decimal = split[1];\r\n    number = split[0] ? split[0] : number;\r\n    return '$' + String(number).replace(/(.)(?=(\\d{3})+$)/g, '$1.') + decimal;\r\n};\r\n\r\n\r\nexport default moneyString;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,WAAW,GAAIC,MAAM,IAAK;EAC5B,MAAMC,KAAK,GAAGD,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC;EAC/B,MAAMC,OAAO,GAAGD,KAAK,CAAC,CAAC,CAAC;EACxBD,MAAM,GAAGC,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGD,MAAM;EACrC,OAAO,GAAG,GAAGG,MAAM,CAACH,MAAM,CAAC,CAACI,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,GAAGF,OAAO;AAC7E,CAAC;AAGD,eAAeH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}